31/5/2010

1. void search(stl_table_cursor *, ...,stl_table *, ...) 

   doesn't compile : syntax error before '*' token

   needs:

   void search(void *,...,void *,...)

2. notes on mixing C/C++ 

   main has to be compiled with g++

   linking has to be performed with g++ so that it can use its special libraries



1/6/2010

1. fts3 setup wasn't created to keep integer primary key column, so
   column 0 has name "integer" instead of "integer primary key
   autoincrement"

   proposed convention for input description: column 0 is "integer primary key autoincrement"

2. sqlite3_free complains about non-aligned pointer being freed
   (attempting to free (int*)) while free does ok.

   should be ok now.hadn't allocated enough memory for
   stl_table_cursor

3. column names (char **azColumn field in stl_table doesn't behave as
   should.
   eg. stl->azColumn[0]="INTEGER"  ??
       stl->azColumn[1]="account_no"
       stl->azColumn[2]="balanc\b"  ??

4. row manipulation

   - the fact that xnext( fetch next row) is called only once strikes
     me as odd.

- operation returns error code in the end. code is SQLITE_ROW which
  means another row of result is available but why is it terminating?
  it should call xnext again. so I'm missing sth.

- gdb shows nothing unusual. SQLITE_ROW is set because there is still
  work to be done, I didn't make out an error of some kind.
  sqlite3VdbeExec and sqlite3Step is where it all happens.


2/06/2010

1. operation success. no output

2. improve code quality

   sqlite3_stmt is actually a Vdbe struct. in case needed in xcolumn

3. output with sqlite3_column but found sqlite3_get_table very handy

4. make a wrapper function for the select query.

   arguments: module name, db name, void * pointer to data, sql query

5. make prep_exec distinguish create calls from select calls
   (register_stl_table / run_stl_query) so that sqlite3_get_table is incorporated


3/06/2010

1. have to have sqlite3_stmt available in retrieve so that to wrap all
   column returns with sqlite3_column_text and return them with
   sqlite3_result_text

   Problem is sqlite3 (which has field vdbe * aka sqlite3_stmt *) is
   only declared in sqlite3.h (typedef struct sqlite3 sqlite3;) and not defined hence trying to refer to
   vdbe * fails as incomplete type.

2. 
